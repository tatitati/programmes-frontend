#!/bin/sh

set -e
RESULT=0

# If we're not already using php71+, try and solve that
if ! (php --version | grep -q "PHP 7.") ; then
    echo "You're not using PHP 7.1+, please install it."
    php --version
    exit 1
fi

export SYMFONY_ENV=prod;

# setup and run composer
if [ -n "$OAUTH" ]; then
    composer config -g github-oauth.github.com $OAUTH
fi

composer --no-ansi --no-interaction require bbc/programmes-xhprof
composer --no-ansi --no-interaction install

# Make sure the reports directory exists
if [ ! -d "build/reports" ]; then
    mkdir -p build/reports
fi

yarn install

# Show php version for debugging
php --version

# Compile static assets
yarn gulp-ci

# Run PHPUnit
if $WITH_TEST_COVERAGE ; then
    echo "Code coverage: on"
    #bin/phpunit || RESULT=1
else
    echo "Code coverage: off"
    #bin/phpunit --no-coverage || RESULT=1
fi

# Run PHPCS
vendor/bin/phpcs -n --report=checkstyle --report-file=build/reports/checkstyle.xml || RESULT=1

# Run sass-lint
yarn run lint || RESULT=1

# Run PHPStan
vendor/bin/phpstan analyse -c phpstan.neon src tests --level=4 --memory-limit=256M || RESULT=1

if [ "$RESULT" = "0" ]; then
    SYMFONY_ENV="prod" APP_ENV="prod" composer --no-ansi --no-interaction --no-dev --optimize-autoloader --prefer-dist install || RESULT=1
fi

exit $RESULT
